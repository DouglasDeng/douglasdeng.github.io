<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Douglas Deng</title>
    <link>/post/</link>
    <description>Recent content in Posts on Douglas Deng</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sun, 09 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Post 1</title>
      <link>/post/2021/05/09/my-post/</link>
      <pubDate>Sun, 09 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/2021/05/09/my-post/</guid>
      <description>This was a memory prior to COVID, Janurary 2020. I went with a UT organization to Ghana for a one-week, medical mission.
Link for more information</description>
    </item>
    
    <item>
      <title>Python</title>
      <link>/post/2021/05/09/python/</link>
      <pubDate>Sun, 09 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/2021/05/09/python/</guid>
      <description>This is an example of Quick plot python code in R. This particular example uses two python code chunks
library(reticulate) py_install (&amp;quot;numpy&amp;quot;) py_install(&amp;quot;matplotlib&amp;quot;) py_install(&amp;quot;pandas&amp;quot;) library(reticulate) matplotlib &amp;lt;- import(&amp;quot;matplotlib&amp;quot;) matplotlib$use(&amp;quot;Agg&amp;quot;, force = TRUE)  import numpy as np import matplotlib.pyplot as plt x=np.random.normal(50,10,100) y=np.random.normal(50,10,100) plt.scatter(x,y) The numpy stack was used to generate random numbers and the Matplotlib stack was used to help create the scatter plot. First, the numpy function creates 100 random numbers from a normal distribution with a mean of 50 and a standard deviation of 10.</description>
    </item>
    
  </channel>
</rss>
